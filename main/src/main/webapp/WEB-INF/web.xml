<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring.xml</param-value>
  </context-param>

  <listener>
    <description>spring监听器</description>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- 字符编码过滤器
		过滤器如何获取初始化参数:
			FilterConfig:
				public String getInitParameter(String name);
	-->
  <filter>
    <filter-name>encoding</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <!-- 设置响应字符编码设置与请求字符编码设置保存一致. -->
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encoding</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>FORWARD</dispatcher><!-- 表示对服务器内部资源转发是否进行过滤. -->
    <dispatcher>REQUEST</dispatcher><!-- 表示默认对象客户端请求进行过滤 -->
  </filter-mapping>

  <!-- 支持RESTFul风格.可以将POST请求转换为PUT或DELETE
      提供请求参数"_method"
  -->
  <filter>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <servlet-name>springmvc</servlet-name>
  </filter-mapping>

  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:/springmvc.xml</param-value>
    </init-param>
    <!--
        load-on-startup 表示创建Servlet对象的时机:
            默认情况下Servlet对象在第一次访问时创建对象的.
            如果希望服务器一启动就创建Servlet对象:
                可以设置取值:大于等于0的整数值.值越小优先级别越高.
                如果设置为负值值,表示在第一个请求时创建对象,与默认是一致.
     -->
    <load-on-startup>0</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <!-- Servlet匹配规则有四种:
        ①精确匹配
            http://localhost:8080/projectName/user/add.do
            <url-pattern>/user/add.do</url-pattern>
        ②路径匹配
            http://localhost:8080/projectName/user/add.do
            http://localhost:8080/projectName/user/delete.do
            <url-pattern>/user/*</url-pattern>
            <url-pattern>/*</url-pattern>
        ③扩展名称匹配
            http://localhost:8080/projectName/user/add.htm
            <url-pattern>*.htm</url-pattern>
        ④默认匹配
            <url-pattern>/</url-pattern>
     -->
    <url-pattern>*.htm</url-pattern>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>

  <welcome-file-list>
    <welcome-file>/u/login.shtml</welcome-file>
  </welcome-file-list>

  <!-- 配置session超时时间，单位分钟 -->
  <session-config>
    <session-timeout>10080</session-timeout>
  </session-config>

</web-app>
